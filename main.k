; Generated by Veneer




Package Virtual-Analog {

Brief() { 
;; Bandlimited oscillators and nonlinear filters.
 nil
}


BLEP-Osc(freq width waveform) {
;; Synthesizes two phase-offset, band-limited sawtooth waves from a shared phasor with 'freq'uency. The 'width' determines the phase offset relative to the waveform period. 'waveform' is the gain coefficient for the offset sawtooth; use 1 for dual saw and -1 for variable width pulse. Polynomial band-limited step is used for alias supression. 
(nrclehe8v73xu2fe-0 nrclehe8v73xu2fe-1 nrclehe8v73xu2fe-2) = arg
(nu8q4rufog1bgjw7-0) = (phase rate) => ( Poly-BLEP(phase rate) ) 
(nzxb7k0beezz7hk7-0) = Dual-Saw(nu8q4rufog1bgjw7-0 nrclehe8v73xu2fe-0 nrclehe8v73xu2fe-1 nrclehe8v73xu2fe-2)
nzxb7k0beezz7hk7-0
}

BLIT-Osc(freq width waveform) {
(npp0mh5x82swj59r-0) = (ntbur1zsci999meq-0 / nao171vjon4ab7hc-0)
(nu8z6vb0ahicka5-0) = (phase rate) => ( DSF(phase rate n1mss3tboknlhovv-0 n00igxds448qpuov-0 n99e16vcfs145s1d-0) ) 
(n99e16vcfs145s1d-0) = #0.25
(n1mss3tboknlhovv-0) = Approx:Fast:Pow(ny7e4vr3e2gzz2oq-0 npp0mh5x82swj59r-0)
(ntbur1zsci999meq-0 ntbur1zsci999meq-1 ntbur1zsci999meq-2) = arg
(nvokj1b4s4rc58a0-0) = Dual-Saw(nu8z6vb0ahicka5-0 ntbur1zsci999meq-0 ntbur1zsci999meq-1 ntbur1zsci999meq-2)
(n00igxds448qpuov-0) = 5000
(nao171vjon4ab7hc-0) = Gen:Rate()
(ny7e4vr3e2gzz2oq-0) = 0.5
nvokj1b4s4rc58a0-0
}

Dual-Saw(engine freq width shape) {
(ngwiza4tcnjx43th-0) = (n0v993l9lu93zrb4-1 * n39m4vfjjo3ml1nr-0)
(nlgii8aqy7d0e8lg-0) = phasor(ngwiza4tcnjx43th-0)
(nc6z6xdas21z9bzq-0) = (n4vsbunvcp129gj-0 * #0.5)
(n4vsbunvcp129gj-0) = (n9z617c34ij2j3t3-0 + nyzem873iw6uh697-0)
(ndafe8dourjlpn4v-0) = 0
(n2q8g1xuctho4mzp-0) = Gen:Signal(ndafe8dourjlpn4v-0)
(n9z617c34ij2j3t3-0) = (n0v993l9lu93zrb4-3 * njvgvk4bue2vi67d-0)
(njvgvk4bue2vi67d-0) = Eval(n0v993l9lu93zrb4-0 nttvfwceioxw4ekz-0 ngwiza4tcnjx43th-0 )
(n39m4vfjjo3ml1nr-0) = Interval-of(n2q8g1xuctho4mzp-0)
(n0v993l9lu93zrb4-0 n0v993l9lu93zrb4-1 n0v993l9lu93zrb4-2 n0v993l9lu93zrb4-3) = arg
(nyzem873iw6uh697-0) = Eval(n0v993l9lu93zrb4-0 nlgii8aqy7d0e8lg-0 ngwiza4tcnjx43th-0 )
(nttvfwceioxw4ekz-0) = Fraction(nquxe9rfl5fv5262-0)
(nquxe9rfl5fv5262-0) = (n0v993l9lu93zrb4-2 + nlgii8aqy7d0e8lg-0)
nc6z6xdas21z9bzq-0
}

Poly-BLEP(phase rate) {
;; Bandlimited sawtooth waveshaping function based on a 2nd degree polynomial bandlimited step. Receives `phase` as a number between 0 and 1 and `rate` as the expected difference between consecutive phase values. `rate` is used to adjust BLEP smoothness.
(n2ixhbn599k56mn7-0) = (ny5wywjmrvvcf8ga-0 / no3u0kjdgxlqx2ue-1)
(npovwjjic9ws6yau-0) = 1
(n5wscwn905xh99ki-0) = (na4rlm23qxqfgng6-0 + n67gzklu5eeaa5w-0 + n67gzklu5eeaa5w-0)
(nl450041zb4ergf6-0) = 1
(na4rlm23qxqfgng6-0) = (n56v4sd0ma4mb2uw-0 * nyanol2vfruwmpwm-0)
(n34f4st3vf5vqdp1-0) = (n67gzklu5eeaa5w-0 * n67gzklu5eeaa5w-0)
(ntt4wmmar0ien1w6-0) = (nuk7qfxharohwf1l-0 - nl450041zb4ergf6-0 - n5wscwn905xh99ki-0)
(n67gzklu5eeaa5w-0) = clamp(n2ixhbn599k56mn7-0 -1 1)
(nyanol2vfruwmpwm-0) = (-1 - n34f4st3vf5vqdp1-0)
(n56v4sd0ma4mb2uw-0) = Math:Copy-Sign(npovwjjic9ws6yau-0 ny5wywjmrvvcf8ga-0)
(nuk7qfxharohwf1l-0) = (neljp3hu7j4528ht-0 * 2)
(ny5wywjmrvvcf8ga-0) = (no3u0kjdgxlqx2ue-0 - 0.5)
(neljp3hu7j4528ht-0) = Fraction(ny5wywjmrvvcf8ga-0)
(no3u0kjdgxlqx2ue-0 no3u0kjdgxlqx2ue-1) = arg
ntt4wmmar0ien1w6-0
}

DSF(phase rate rolloff harmonics phase-shift) {
;; Discrete Summation Formula ala Moorer  Computes equivalent to sum{k=0:N-1}(a^k * sin(beta + k*theta))  According to https://www.musicdsp.org/en/latest/Synthesis/140-dsf-super-set-of-blit.html
(nxgxn40wvxotlh7v-0) = (nzvw998z1c3hduq-0 - n4c4f1i3fyktg2vg-0 - n3htakwa5buiw643-0)
(nf6o6f52u0f847jc-0) = DSFSin(nm9979s6reekfesn-0)
(n8568rkj902ky5p4-0) = DSFSin(nadmzbv5hsb9xrae-0)
(n20da95ouaf4ndjt-0) = (n5p9kvhderiel6yt-0 + 1)
(n6vhn4od7oal144e-0) = noed7ho21y8c369d-4
(nm9979s6reekfesn-0) = (n6vhn4od7oal144e-0 + nxd3wic81232ovcg-0)
(n8e9vd9eer9c8ase-0) = (nee0icfwdmoac1vv-0 - 1)
(n4eq03fsgxye90dw-0) = 2
(nedza7zw08vzg17t-0) = (nm9979s6reekfesn-0 - noed7ho21y8c369d-0)
(nal1ahdob52pqt0n-0) = Math:Pow(nqmxpel91r5zx4jq-0 ndkv773rknsskkwe-0)
(nqmxpel91r5zx4jq-0) = nbcuot53viy86byc-0
(nzcyikmije3pxng9-0) = (n8e9vd9eer9c8ase-0 * noed7ho21y8c369d-1)
(norl7ce13mfz44z3-0) = (nxgxn40wvxotlh7v-0 + nnbhgp991moih667-0)
(ndohe797fypmrsg6-0) = (nqmxpel91r5zx4jq-0 - nnaw81j62abjvz19-0)
(nadmzbv5hsb9xrae-0) = (noed7ho21y8c369d-0 + 0.25)
(nbcuot53viy86byc-0) = Min(ny1e5nu5yo2oklnj-0 noed7ho21y8c369d-2)
(ny1e5nu5yo2oklnj-0) = 0.99999
(n3htakwa5buiw643-0) = (nal1ahdob52pqt0n-0 * nf6o6f52u0f847jc-0)
(nnaw81j62abjvz19-0) = (n4eq03fsgxye90dw-0 * n8568rkj902ky5p4-0)
(ndkv773rknsskkwe-0) = (noed7ho21y8c369d-3 + 2)
(n5p9kvhderiel6yt-0) = (ndohe797fypmrsg6-0 * nqmxpel91r5zx4jq-0)
(nxd3wic81232ovcg-0) = (ndkv773rknsskkwe-0 * noed7ho21y8c369d-0)
(nnbhgp991moih667-0) = (nal1ahdob52pqt0n-0 * nqmxpel91r5zx4jq-0 * n1vj3809pl92qazs-0)
(n4c4f1i3fyktg2vg-0) = (nqmxpel91r5zx4jq-0 * nn4dz2x4wyduqtia-0)
(noed7ho21y8c369d-0 noed7ho21y8c369d-1 noed7ho21y8c369d-2 noed7ho21y8c369d-3 noed7ho21y8c369d-4) = arg
(nbw6rq65pa3nb3e7-0) = (n6vhn4od7oal144e-0 - noed7ho21y8c369d-0)
(n1vj3809pl92qazs-0) = DSFSin(nedza7zw08vzg17t-0)
(nn4dz2x4wyduqtia-0) = DSFSin(nbw6rq65pa3nb3e7-0)
(nzvw998z1c3hduq-0) = Math:Sin(naysdq0tzu1qy6hu-0)
(nee0icfwdmoac1vv-0) = (norl7ce13mfz44z3-0 / n20da95ouaf4ndjt-0)
(naysdq0tzu1qy6hu-0) = ((n6vhn4od7oal144e-0 * #2) * Math:Pi)
nzcyikmije3pxng9-0
}

DSFSin(phase) {
(n83aydacojcozbt9-0) = Approx:Cosine-Shape(nd12h2dslo1dpeym-0 njzutu8aulc3ah9o-0)
(n4pm6wgg45sd8991-0) = arg
(njzutu8aulc3ah9o-0) = #6
(ngtwb3rb75brxj59-0) = Fraction(n4pm6wgg45sd8991-0)
(nd12h2dslo1dpeym-0) = (ngtwb3rb75brxj59-0 - 0.25)
n83aydacojcozbt9-0
}

phasor(inc) {
(n7vb6fqvvs9cv7lw-0) = z-1(nxkcnemcw9cl3wd7-0)
(na4p9ysyp1p3iir-0) = nsxdaza9jozk6emu-0
(njatak14u3x1t56r-0) = arg
(npziw4g5gb6lcalz-0) = Gen:Signal(njatak14u3x1t56r-0)
(nsxdaza9jozk6emu-0) = Fraction(n7vb6fqvvs9cv7lw-0)
(nxkcnemcw9cl3wd7-0) = (npziw4g5gb6lcalz-0 + nsxdaza9jozk6emu-0)
na4p9ysyp1p3iir-0
}

clamp(sig min max) {
(n6sz5yn9dxjr94zj-0) = Min(ncsgkzy2vqtji1fl-0 njkb3fzfo05b614q-2)
(ncsgkzy2vqtji1fl-0) = Max(njkb3fzfo05b614q-0 njkb3fzfo05b614q-1)
(njkb3fzfo05b614q-0 njkb3fzfo05b614q-1 njkb3fzfo05b614q-2) = arg
n6sz5yn9dxjr94zj-0
}



}
